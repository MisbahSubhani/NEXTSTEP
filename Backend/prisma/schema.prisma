// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id           String        @id @default(uuid())
  username     String        @unique
  name         String
  email        String        @unique
  password     String
  applications Application[] // One student can apply to many internships
  favorites    Favorite[] // One student can have many favorites
}

model HR {
  id          String        @id @default(uuid())
  username    String        @unique
  name        String
  email       String        @unique
  password    String
  internships Internships[] // One HR can create many internships
}

model Feedback {
  id      String @id @default(uuid())
  name    String
  email   String
  message String
}

model Application {
  id           String      @id @default(uuid())
  studentId    String // Foreign key to Student
  internshipId String // Foreign key to Internships
  student      Student     @relation(fields: [studentId], references: [id]) // Relationship to Student
  internship   Internships @relation(fields: [internshipId], references: [id]) // Relationship to Internships
}

model Internships {
  id            String        @id @default(uuid())
  company_name  String
  position      String
  location      String
  stipend       Int
  duration      Int
  starting_date DateTime
  is_immediate  Boolean       @default(false)
  created_at     DateTime @default(now())
  hrId          String // Foreign key to HR
  hr            HR            @relation(fields: [hrId], references: [id]) // Relationship to HR
  applications  Application[] // Many applications for this internship
  favorites     Favorite[] // Many favorites for this internship
}

model Favorite {
  id           String      @id @default(uuid())
  studentId    String // Foreign key to Student
  internshipId String // Foreign key to Internships
  student      Student     @relation(fields: [studentId], references: [id]) // Relationship to Student
  internship   Internships @relation(fields: [internshipId], references: [id]) // Relationship to Internships
}